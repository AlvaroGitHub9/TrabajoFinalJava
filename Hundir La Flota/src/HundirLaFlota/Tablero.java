/* para que no se me olvide: los comentarios seran textos guiados para acordarme de para
que sirve o porque estoy haciendo algo, por ejemplo los metodos privados de esta clase
se usan para otros metodos que si seránm publicos y visibles en otras clases */

/*en este programa me dedico a usar char en lugar de String por ejemplo ya que ocupan
un menor espacio de memoria, además de que será mas facil a la hora de representar
caracteres en el programa, por ejemplo las casillas de los barcos */
package HundirLaFlota;

import java.util.Scanner;

public class Tablero {
    private final int filas;
    private final int columnas;
    private char[][] casillas;

    public Tablero(int filas, int columnas) {
        this.filas = filas;
        this.columnas = columnas;
        this.casillas = new char[filas][columnas];
        inicializarTablero(); // inicializar tablero con agua
    }

    public int getFilas() {
        return filas;
    }

    public int getColumnas() {
        return columnas;
    }

    public char[][] getCasillas() {
        return casillas;
    }

    public void setCasillas(char[][] casillas) {
        this.casillas = casillas;
    }

    public void darBienvenida() {
        System.out.println("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%██████╗ ██╗███████╗███╗   ██╗██╗   ██╗███████╗███╗   ██╗██╗██████╗  ██████╗      █████╗%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%██╔══██╗██║██╔════╝████╗  ██║██║   ██║██╔════╝████╗  ██║██║██╔══██╗██╔═══██╗    ██╔══██╗%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%██████╔╝██║█████╗  ██╔██╗ ██║██║   ██║█████╗  ██╔██╗ ██║██║██║  ██║██║   ██║    ███████║%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%██╔══██╗██║██╔══╝  ██║╚██╗██║╚██╗ ██╔╝██╔══╝  ██║╚██╗██║██║██║  ██║██║   ██║    ██╔══██║%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%██████╔╝██║███████╗██║ ╚████║ ╚████╔╝ ███████╗██║ ╚████║██║██████╔╝╚██████╔╝    ██║  ██║%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%╚═════╝ ╚═╝╚══════╝╚═╝  ╚═══╝  ╚═══╝  ╚══════╝╚═╝  ╚═══╝╚═╝╚═════╝  ╚═════╝     ╚═╝  ╚═╝%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");
        System.out.println("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#\r\n" + //
                           "%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%~#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%\r\n" + //
                           "%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%-#%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#.#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%\r\n" + //
                           "#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%.{%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%.{%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%\r\n" + //
                           "%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%.[%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#.]%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%\r\n" + //
                           "#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%>>>>.*>>>>>%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%.>%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#\r\n" + //
                           "%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%#{{{{.-##%%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%{]<(]][{%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%\r\n" + //
                           "#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%#{{{{{{>>{{{%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%#{~[{{{{{{[{{{{%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%\r\n" + //
                           "%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%#%#{{..[{{{-{<{[{{*^#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%%%%%%%#>>{#.....<<..{{[{{{{{{{{**%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#\r\n" + //
                           "%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%#%#%%#%%#%%#............{{=.{{{{{[{{{[{%%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*%%%%%%%%%%%..*{>.~[*{<{{{{{{[{{{{[{[{{{{{{{{{[{{{%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#%%\r\n" + //
                           "#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#.%%#%%#%%#%%..[[.{{{{{[{{[{{{{[(({=..{*..[*.[>.{##%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%.....%%%%%%%%#..[{={{{[{{{{{{[{{{{{{{{{{{.{{{{{{{{#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#%%#%\r\n" + //
                           "%#%%#%%#%%#%%#%%#%%#%%#%%#%%#~==^=....][{{..#%.....{.....{<{{{{[[{{[...........~>]#%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%........({{{..[%.....[{.{[[{{{[{{{{{{.{{{{{{{{[{{..{[{{.......#%%%<.-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#%%#%%#\r\n" + //
                           "%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%*.....{.{{[{{{{{..=..{{{{{{{*{{{[{{[.]{>[]{{{{{*{{>{{{>..{[.{<..*%%%%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%%#~--.....{[[{{{{{{{..>..{{{[{{{{{{{{{{=.{{{{[{{[{{[.{[...[{{.{.={%%%#%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#%%#%%#%%\r\n" + //
                           "#%%#%%#%%#%%#%%#%%#%%#%%#%%#.............................[{[{{{[{..{{{{{{{{{{{{^]{{.{{{{].{{#%%%%%%%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%............{{{{[{{.......~.....]{{{[{...{{[{{{[{{[{{{]{>({{[{{{.{{%%#%%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#{%#%%#%%#%\r\n" + //
                           "%#%%#%%#%%#%%#%%#%%#%%#%#...........{{.{{.~={......<.....<{{[.......{{[{{[{......{{[{{{[{{{[{{##%%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%{%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%{{{###%%%%%%%%#{..........{{={{**{{..-{{[{<..-[[~.........{{{{{{{{{[..-{{{{[{[.{{][~.[{{{{{{..={%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#%{#%%#%%#%%#\r\n" + //
                           "%%#%%#%%#%%##{{#%%#%{[#%%{{*{=......{[.{{{{[{..-{[.<<*{.{{[{{{{{{{=.{{{[{{[{{{{.{{-.{{{{{{{{{{{~~{]=..{............=%#{^....%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%[%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%{[%%%%%#{{{{#[{{{{[.{{{{{=..........{{{{{[{]{{>.{{{{{{{{{[{{{{{{[...{{{{{{[{{[{*{{{.{{{[^(......<{-........^%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#%%{%#%%#%%#%%\r\n" + //
                           "#%%#%%#%%#%%%%%%[[%%%%{{{{{[{{{{{[{.{{{{{{{^.........[{{[{{{{[[^..({{{{{[{{{]...{{{{[{{{{{{{.{[[[[-{{{{{{{..=[%#%%%%%%%%%#%%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%#=%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%#%%#%%%%#{{%%[{.[{{{{{{{{{{~.[{{{{{{{{{-.........={[{{{{..{{{{{[{^...{{[{{{{[{{[{[{{{..{{[{{{{{..{{%%%#%%#%%%%%%%%%%%%%%%#%%#%%#%%#%%#%%#%%#%%%=#%%#%%#%%#\r\n" + //
                           "%%#%%#%%#%%%%%%%%%%{{{{%#{{{.{{[{{[{{{{{{[[.{{{{{{{{{{{{{^........-.............]{{{{[{{{{{{.{{{{[{{{{[{{{{{{{#%%%%%%%#%%%#%%#%%#%%%%%%%%%%%%%%%%%%%%%%%##[%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%#%%#%%#%%%#%%#{%{{{{.]{{{{[{{{{{{{{[{~[{{]{{{{{{{{{{{{[...........=-[{{[{{{{{{[{{{[[{{{.{{{{{{[{{(=..=[{{#%%%%#%%%%%%%%%#%%#%%#%%#%%#%%#%%#%%%%{[%%#%%#%%#%\r\n" + //
                           "%#%%#%%#%%%%%%%%%%#%%%%%%#%{{{{{..[{{{[{{{{{{{{{{{{[{.{{[[{{{{{{{{{{{{{{{[[(*-......>{{{{{[{{{{[{{=...................>{{{{#%%#%%%%%%%%%%%%%%%%%%%%%%%#%%{[%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%#%%#%%#%%%%%#%%%%{[{{{{{{]..{{{[{{[{{[{{[{{{{{{{->=.{{[{{{{{{{{{{{{{{{[..........*{{[{{{{{{={.{{{{{{{{{{{{{{{{{{[{%##%%#%%#%%#%%#%%#%%#%%#%%%%%#={%#%%#%%#%%\r\n" + //
                           "#%%#%%#%%%%%%%%%%#%%%%%#%%[{{[{{{{{{[...{{{{{{{{{{{{[{{[{{{{[{{.{{[.[{{[{{{[{{{{{{{{{{{]...[{...-[{{{.{.{{{{{{{{[[-.....{{[{.....=#%%%%%%%%%%%%%%%%%#%%%%.#%%%%%%%%%%\r\n" + //
                           "%%%%%%%%#%%#%%#%%%%#%%%%%%%#{{{[{{{{{{{(...{{[{{[{{{{{{{{[{{{{{{{{{^.{{{..{{{[{{{{{{{{{{=.]{{{[>.......[..........{{{{[.................#%%#%%#%%#%%%%#%#.%%%#%%#%%#%\r\n" + //
                           "%#%%#%%%%%%%%%%%#%%%%#%%#%%#%%[{{[{{{{{{{{....{{{{[{{[{{{{{[{{[{{[{{{{[{..{{{>.[{{[{{[{{{{{{[{.{{{{{[{{<..................(]..................#%%%%#%%%%{.%#%%%%%%%%%\r\n" + //
                           "%%%%%%#%%#%%#%%%%%#%%%%%%%%%%%%%{{{[{{[{={{{[....{{{{{{[{{{{{{{{{{{[{{{{{{{[{~-<{{{{-.{{{{[{{{{{{{{{{{{{{{{{{{{[..........{{[.......................#%%#{.%%%%#%%#%%#\r\n" + //
                           "%%#%%%%%%%%%%%#%%%%%#%%#%%#%%#%%#{{{{{[{.{[{{{{(....[{{{{[{{[{{[{{{{{[{{{{{{{{{{{[{{{{^{{{{^.{{[{{[{{[{{{{{{{{{{{{{{{{{{]...............................~(%%#%%%%%%%%\r\n" + //
                           "%%%%#%%#%%#%%%%%#%%%%%%%%%%%%%{{{{[{{{{....{{{{{{{-....{{{{{{{{{{[{{{{{[{{[{{[{{{{{[{{{{[{{.*{{{{{{{{{{[{{[{{[{{{{{{{{{{{{{{{{{{{{[=........................(%%#%%#%%\r\n" + //
                           "#%%%%%%%%%%%#%%%%%#%%#%%#%%#%%{{{{{{[{{{{...[{{{{{{{[.....[{{[{{{{{[{{{{{{{{{{{[{{{{{[{{{{{{{{[{{[{{[{{{{{{{{{{[{{[{{[{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{%%%%%%%%\r\n" + //
                           "%%#%%#%%#%%%%%#%%%%%%%%%%%%%%#%%#%%%%%#%{{{{^...]{{{{{{{.....][{{{{{{[{{[{{[{{{{{[{{{{{[{{[{{{{{{{{{{{[{{[{{[{{{{{{{{{{[{{[{{[{{[{{{{{]{{{{{{{{{{{{{{{{{{[[{%#%%#%%#%\r\n" + //
                           "%%%%%%%%%%#%%%%%#%%#%%#%%#%%%%%%%%#%%%%{[{{{[>*~.....{{{{{{-.....{{{{{{{{{{{{[{{{{{[{{{{{{{{[{{[{{[{{{{{{{{{{{[{{[{{[{{{{{{{{{{{{{[{{{.]..[{{[{{[{{[{{[{{.{%%%%%%%%%%\r\n" + //
                           "#%%#%%#%%%%%#%%%%%%%%%%%%%%#%%#%%%%%[{{{{{[{{{{[>....[{{{{{{{[>.....<{[{{[{{{{{[{{{{{[{{[{{{{{{{{{{{[{{[{{[{{{{{{{{{{{[{{[{{[{{[{{{{][-...{{{{{{{{{{{{{{{{%#%%#%%#%%%\r\n" + //
                           "%%%%%%%%#%%%%%#%%#%%#%%#%%%%%%#{{[{{{{[{{{{{{.........[{{[{{{{{{{{......[[{{[{{{{[{{{{{{{{[{{[{{[{{{{{{{{{{{[{{[{{[{{{{{{{{{{{{{{[{{{..{.{{[{{[{{[{{[{{[{%%%%%%%%%%#%\r\n" + //
                           "%#%%#%%%%%#%%%%%%%%%%%%%%#%%#{{{{{[{{{{{[{{[{{{{{{].........^{{{{{{{{.......{{[{{{{[{{[{{{{{{{{{{{[{{[{{[{{{{{{{{{{{[{{[{{[{{[{{{{{[{...[{{{{{{{{{{{{{{{%#%%#%%#%%%%%\r\n" + //
                           "%%%%%%#%%%%%#%%#%%#%%#%%%%%%%%#%%%%%[{{{{{{{{{{{{{{{{{.........>{[{{{{{{>.......[{{{{{{{[{{[{{[{{{{{{{{{{{[{{[{{[{{{{{{{{{{{{{{[{{{{{{{{{{[{{[{{[{{[{{{%%%%%%%%%%#%%#\r\n" + //
                           "%%#%%%%%#%%%%%%%%%%%%%%#%%#%%%%%#%%{{{[{{[{{[{{[{{[{{{{{{.......{{{[{{{{{{{{........{{{{{{{{{{{{[{{[{{[{{{{{{{{{{{[{{[{{[{{[{{{{{[{{[{{{{{{{{{{{{{{{{{#%%%#%%#%%%%%%%\r\n" + //
                           "%%%%#%%%%%#%%#%%#%%#%%%%%%%%#%%%%%#%%%{{{{[{{{{{{{{{[{{[{{{{{...........={{{{{{]........{{[{{[{{{{{{{{{{[{{[{{[{{{{{{{{{{{{{{[{{{{{{{{[{{[{{[{{[{{[{{%%%#%%%%%%#%%#%%\r\n" + //
                           "#%%%%%#%%%%%%%%%%%%%%#%%#%%%%%#%%%%%#%%%#%%%%##{{[{{{{{{[.........{{{{{{{{[{{{{{{{{.........]{{[{{[{{[{{{{{{{{{{[{{[{{[{{[{{{{{[{{[{{{{{{{{{{{{{{{{[%%%%%%%#%%%%%%%%%\r\n" + //
                           "%%#%%%%%#%%#%%#%%#%%%%%%%%#%%%%%#%%%%%%%%%%#%%{{{{{[{{[{{{{{{{{{{{{{{{{{{{{{[{{{{{{{{{{.........=[{{{{{[{{[{{[{{{{{{{{{{{{{[{{{{{{{{[{{[{{[{{[{{[{{%%#%%%#%%%#%%#%%#%\r\n" + //
                           "%%%%#%%%%%%%%%%%%%%#%%#%%%%%#%%%%%#%%#%%%#%%%{{[{{{{{{{{{{{{{{{{{{[{{[{{[{{{{{[{{[{{{{{{{{{..........{{{{{{{{{{[{{[{{[{{[{{{{[{{[{{{{{{{{{{{{{{{{{#%%%%#%%%%%%%%%%%%%\r\n" + //
                           "#%%%%%#%%#%%#%%#%%%%%%%%#%%%%%#%%%%%%%%#%%%%#%%%%#%%#%%#{{[{{[{{[{{{%%{{{{[{{{{{{{{[{{[{{{{{{{[..........{{[{{{{{{{{{{{{{{[{{{{{{{[{{[{{[{{[{{[{{%%%#%%%%%#%%%#%%#%%%\r\n" + //
                           "%%#%%%%%%%%%%%%%%#%%#%%%%%#%%%%%#%%#%%%%%%#%%%#%%%%%%#{{{{{{{{[%%%%#%%#%%%%%#%%#%{{{{{{{[{{{{{{{{{{-..........[{{[{{[{{[{{{{[{{[{{{{{{{{{{{{{{{{[%%%%%#%%%%%#%%%%%%#%\r\n" + //
                           "%%%%#%%#%%#%%#%%%%%%%%#%%%%%#%%%%%%%%#%%#%%%%%%%#%%[{{{{[{#%%%%%#{{{{{{{[%%%%%%%{[{{[{{{{{[{{[{{{{{{{{{(..........>{{{{{{[{{{{{{{[{{[{{[{{[{{[{{%%#%%%%%#%%%%%%#%%%%%\r\n" + //
                           "#%%%%%%%%%%%%%%#%%#%%%%%#%%%%%#%%#%%%%%%%%%#%%%%%%{{{%##[{{{{{{{{{[{#%%%%%#%%#{{{{{{{{[{{{{{{{{[{{[{{{{{{{{{...........={{{[{{[{{{{{{{{{{{{{{{{[%%%%#%%%%%#%%#%%%#%%%\r\n" + //
                           "%%#%%#%%#%%#%%%%%%%%#%%%%%#%%%%%%%%#%%#%%#%%%#%%%#%%#%%{{{{{{[{{{{{{{{[{{#%{{{{[{{[{{{{{[{{[{{{{{{{~^[{{{[.{{{{{(.............<[{{[{{[{{[{{[{{{%%#%%%%#%%%%%%%%%%%%#%\r\n" + //
                           "%%%%%%%%%%%%%#%%#%%%%%#%%%%%#%%#%%%%%%%%%%%%%%%#%%%%%%%%%#%%%%%#%%%##{{%%%%#%%%[{{{{[{{{{{{{[..................{{{{{{-.........................%%%%#%%%%#%%#%%#%%%%%%\r\n" + //
                           "#%%#%%#%%#%%%%%%%%#%%%%%#%%%%%%%%#%%#%%#%%#%%%%%%%#%%#%%%%%#%%%%%#%%%[{{[{{[{#%%%#{{{{[{{[{..[{{{{{{{...................{{....................-%#%%%%#%%%%%%%%%%#%%%%\r\n" + //
                           "%%%%%%%%%%%#%%#%%%%%#%%%%%#%%#%%%%%%%%%%%%%%#%%%#%%%%%%#%%%%%#%%%%%[{{{{{{{{{{{{{{{[{{{[{..{{{{{{{{{{{{.....................{{[...............{{%%#%%%%#%%#%%#%%%%#%%\r\n" + //
                           "%#%%#%%#%%%%%%%%#%%%%%#%%%%%%%%#%%#%%#%%#%%%%%#%%%%#%%%%%#%%%%%#%{{{{{[{{[{{[{{[{{{{{[{{{{{{{{[{{[{{[{{{{......{{{{...........~{{{{{*.........{{%%%%#%%%%%%%%%%#%%%%#\r\n" + //
                           "%%%%%%%%%#%%#%%%%%#%%%%%#%%#%%%%%%%%%%%%%%#%%%%%%#%%%#%%%%%#%%%%%#%%#%%%#{{{{{{{{[{{{{{{[{{[{#%%[{{{{{[{{{{{[{{{{{{{{{[....{{{{{{{{{{{{{[[...>{{[%%%%%#%%#%%#%%%%#%%%\r\n" + //
                           "%%#%%#%%%%%%%%#%%%%%#%%%%%%%%#%%#%%#%%#%%%%%#%%#%%%%%%%#%%%%%#%%%%%%%%%%%%#%%#%%{{{[{{[{{{[%%#%%%%[{{{{{[{{{{{{[{{[{{{{{{{{{{{{[{{[{{{{[{{{{{{{{[%%#%%%%%%%%%%#%%%%#%\r\n" + //
                           "%%%%%%%#%%#%%%%%#%%%%%#%%#%%%%%%%%%%%%%%#%%%%%%%%%#%%%%%%#%%%%%#%%#%%#%%%%%%%%%#%%%%%{[{{%%%%%%#%%%%#{{{{{[{{[%%%%%%#%%#%%##%#%%%%%%#%%%%%%#%%#%%%%%%#%%#%%#%%%%#%%%%\r\n" + //
                           "%%%%%%%%#%%%%#%%%%%%%#%%#%%#%%#%%%%%#%%#%%#%%#%%%%%#%%%%%#%%%#%%%#%%%%%%%%#%%%%%%#%%%%%%%%#%%%%%%#%%%%%%%%%%%%%%%%%#%%%%%%%%%%%#%%%%%%#%%#%%#%%%#%%#%%%#%%%%%#%%%%%%%");
        System.out.println("%%%%%%%%%%%%%%%%%%%%%%%%%%██╗  ██╗██╗   ██╗███╗   ██╗██████╗ ██╗██████╗     ██╗      █████╗     ███████╗██╗      ██████╗ ████████╗ █████╗ %%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%██║  ██║██║   ██║████╗  ██║██╔══██╗██║██╔══██╗    ██║     ██╔══██╗    ██╔════╝██║     ██╔═══██╗╚══██╔══╝██╔══██╗%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%███████║██║   ██║██╔██╗ ██║██║  ██║██║██████╔╝    ██║     ███████║    █████╗  ██║     ██║   ██║   ██║   ███████║%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%██╔══██║██║   ██║██║╚██╗██║██║  ██║██║██╔══██╗    ██║     ██╔══██║    ██╔══╝  ██║     ██║   ██║   ██║   ██╔══██║%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%██║  ██║╚██████╔╝██║ ╚████║██████╔╝██║██║  ██║    ███████╗██║  ██║    ██║     ███████╗╚██████╔╝   ██║   ██║  ██║%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n" + //
                           "%%%%%%%%%%%%%%%%%%%%%%%%%%╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═════╝ ╚═╝╚═╝  ╚═╝    ╚══════╝╚═╝  ╚═╝    ╚═╝     ╚══════╝ ╚═════╝    ╚═╝   ╚═╝  ╚═╝%%%%%%%%%%%%%%%%%%%%%%%%%%%");
        }   

    private void inicializarTablero() {
        for (int i = 0; i < filas; i++)
        {
            for (int j = 0; j < columnas; j++)
            {
                casillas[i][j] = '~'; // '~' = agua u olas
            }
        }
    }

    public int crearTablero(Scanner scanner) {
    int numCasillas;
    boolean salida;
    do
    {
        System.out.println("Cual va a ser el tamaño del tablero (no más de 26)");
        numCasillas = scanner.nextInt();
        
        if (numCasillas > 26) {
            System.out.println("Error, el tamaño del tablero es demasiado grande");
            salida = false;
        }
        else if (numCasillas < 10)
        {
            System.out.println("Error, el tamaño del tablero es demasiado pequeño");
            salida = false;
        }
        else
        {
            salida = true;
        }
    } while (!salida);

    return numCasillas;
}

    public void mostrarTablero() {
        System.out.println("Tablero:");
        // Mostrar encabezado de columnas
        System.out.print("   "); // Espacio para que las letras de coordenadas esten a la misma altua que las olas
        for (int col = 0; col < columnas; col++)
        {
            System.out.print((char) ('A' + col) + " ");
        }
        System.out.println();

        // Mostrar filas con números y contenido de las casillas
        for (int fila = 0; fila < filas; fila++)
        {
            System.out.print(String.format("%2d", fila + 1) + " "); // Formatear el número de fila
            for (int col = 0; col < columnas; col++)
            {
                char contenidoCasilla = casillas[fila][col];
                char símboloBarco = '~';
                switch (contenidoCasilla)
                {
                    case 'B':
                        símboloBarco = 'B'; // B de Buque insignia
                        break;
                    case 'A':
                        símboloBarco = 'A'; // A de Acorazado
                        break;
                    case 'D':
                        símboloBarco = 'D'; // D de Destructor
                        break;
                    case 'F':
                        símboloBarco = 'F'; // F de Fragata
                        break;
                    case 'G':
                        símboloBarco = 'G'; // G de Goleta
                        break;
                    case 'X':
                        símboloBarco = 'X'; // X para barcos golpeados
                        break;
                    case 'O':
                        símboloBarco = 'O'; // O par cuando golpeamos al Agua
                        break;

                }
                System.out.print(símboloBarco + " ");
            }
            System.out.println();
        }
    }



    public void mostrarReglas(Scanner scanner) {
        System.out.print("Ver reglas del juego? (Si/No): ");
        String reglas = scanner.next().toLowerCase();

        if (reglas.equals("si"))
        {
            System.out.println();
            System.out.println("========= REGLAS DEL JUEGO =========================================================================");
            System.out.println(" - Barcos --> Cada uno de los jugadores poseera 10 barcos de distintos tamaños:");
            System.out.println("                -------------------------------------------------------");
            System.out.println("                    + Buque Insignia (1) = 5 casillas --> B B B B B");
            System.out.println("                -------------------------------------------------------");
            System.out.println("                    + Acorazado (1) = 4 casillas --> A A A A");
            System.out.println("                -------------------------------------------------------");
            System.out.println("                    + Destructor (2) = 3 casillas --> D D D");
            System.out.println("                -------------------------------------------------------");
            System.out.println("                    + Fragata (3) = 2 casillas --> F F");
            System.out.println("                -------------------------------------------------------");
            System.out.println("                    + Goleta (3) = 1 casilla --> G");
            System.out.println("                -------------------------------------------------------");
            System.out.println(" - Los jugadores deberan colocar sus barcos estrategicamente y hundir toda la flota enemiga para vencer");
            System.out.println(" - La colocación siempre se hará de izquierda a derecha (horizontal) o de arriba a abajo (vertical)");
            System.out.println("=====================================================================================================");
        }
    }

    public void colocarBarcos(Scanner scanner, int jugador) {
        String[] nombreBarcos = {"Buque Insignia", "Acorazado", "Destructor", "Fragata", "Goleta"};
        int[] cantidadesBarcos = {1, 1, 2, 3, 3}; // La cantidad de barcos que hay de cada tipo de tamaño
        int[] casillasBarcos = {5, 4, 3, 2, 1}; // Las casillas que ocupan cada barco, en mi caso de mayor a menor
        
        // Con esto hacemos que el orden de colocacion sea del más grande al más pequeño
        for (int i = 0; i < nombreBarcos.length; i++)
        {
            int barcosRestantes = cantidadesBarcos[i];
            System.out.println("Jugador " + jugador + ": Colocando " + barcosRestantes + " " + nombreBarcos[i] + "(s) (tamaño: " + casillasBarcos[i] + ")");
            
            while (barcosRestantes > 0)
            {
                // Pide al usuario las coordenadas y la orientación del barco
                System.out.println("Introduce la coordenada del eje Y (número):");
                int y = scanner.nextInt() - 1;
                System.out.println("Introduce la coordenada del eje X (letra):");
                int x = scanner.next().toUpperCase().charAt(0) - 'A';
                System.out.println("Introduce la orientación del barco (Horizontal o Vertical):");
                String orientacion = scanner.next().toUpperCase();
                
                // Verifica si se puede colocar y actualiza el tablero
                if (esColocacionValida(y, x, casillasBarcos[i], orientacion))
                {
                    colocarBarco(y, x, casillasBarcos[i], orientacion, nombreBarcos[i].charAt(0));
                    barcosRestantes--;
                    System.out.println(nombreBarcos[i] + "(s) " + (cantidadesBarcos[i] - barcosRestantes) + " desplegada(s)");
                    mostrarTablero();
                }
                else
                {
                    System.out.println("No se puede colocar el barco en esa casilla. Intentalo de nuevo.");
                }
            }
        }
    }

    public void limpiarTerminal() {
        for (int i = 0; i < 50; i++)
        {
            System.out.println();
        }
    }
    
    private boolean esColocacionValida(int ejeY, int ejeX, int tamaño, String orientacion) {
        // Verificar si las coordenadas están dentro del tablero
        if (ejeY < 0 || ejeY >= filas || ejeX < 0 || ejeX >= columnas)
        {
            return false;
        }
    
        // Verificar si el barco cabe en el tablero segun su orientación
        if (orientacion.equals("H"))
        {
            if (ejeX + tamaño > columnas)
            {
                return false; // El barco no cabe en el tablero en la orientación horizontal (ej: barco de 5 casillas en cualquier posicion a 4 casillas de la derecha o eje X)
            }
        }
        else if (orientacion.equals("V"))
        {
            if (ejeY + tamaño > filas)
            {
                return false; // El barco no cabe en el tablero en la orientación vertical (ej: barco de 5 casillas en cualquier posicion a 4 casillas de abajo o eje Y)
            }
        }
        else
        {
            return false; // La orientación proporcionada no es valida: por si has puesto otra cosa que no sea h o v 
        }
    
        // Verificar si las casillas necesarias están libres
        for (int i = 0; i < tamaño; i++)
        {
            if (orientacion.equals("H"))
            {
                if (casillas[ejeY][ejeX + i] != '~')
                {
                    return false;
                }
            }
            else if (orientacion.equals("V"))
            {
                if (casillas[ejeY + i][ejeX] != '~')
                {
                    return false;
                }
            }
        }
    
        return true; // Se puede colocar
    }

    private void colocarBarco(int ejeY, int ejeX, int tamaño, String orientacion, char simboloBarco) {
        // Colocar el barco en las casillas correspondientes
        for (int i = 0; i < tamaño; i++)
        {
            if (orientacion.equals("H"))
            {
                casillas[ejeY][ejeX + i] = simboloBarco;
            }
            else if (orientacion.equals("V"))
            {
                casillas[ejeY + i][ejeX] = simboloBarco;
            }
        }
    }

    public char realizarAtaque(int fila, int columna) {
        char contenidoCasilla = casillas[fila][columna];
        if (contenidoCasilla == '~')
        {
            // Casilla con agua
            casillas[fila][columna] = 'O'; // Recordatorio O = agua, X = barco
        }
        else
        {
            // Casilla con barco
            casillas[fila][columna] = 'X';
        }
        return contenidoCasilla; // Devolver el contenido original de la casilla
    }

    public void mostrarTableroParaAtacante() { // este tablero esta para no saber la localizacion de los barcos del tablero del enemigo, ya que solo sustituye la misma letra en lugar de sustituir todas las demás
        System.out.println("Tablero:");
        // Mostrar encabezado de columnas
        System.out.print("   "); // Espacio adicional para alinear las coordenadas
        for (int col = 0; col < columnas; col++)
        {
            System.out.print((char) ('A' + col) + " ");
        }
        System.out.println();
    
        // Mostrar filas con números y contenido de las casillas
        for (int fila = 0; fila < filas; fila++)
        {
            System.out.print(String.format("%2d", fila + 1) + " "); // Formatear el número de fila
            for (int col = 0; col < columnas; col++)
            {
                char contenidoCasilla = casillas[fila][col];
                char símboloMostrar = '~'; // Símbolo por defecto para agua no golpeada
    
                // Mostrar solo los ataques realizados (golpes y agua)
                switch (contenidoCasilla) {
                    case 'X':
                        símboloMostrar = 'X'; // Golpeado
                        break;
                    case 'O':
                        símboloMostrar = 'O'; // Agua golpeada
                        break;
                }
                System.out.print(símboloMostrar + " ");
            }
            System.out.println();
        }
    }

    public boolean barcoHundido(char simboloBarco) {
        // da vueltas al tablero para verificar si hay alguna parte del barco aún en pie
        for (int fila = 0; fila < filas; fila++)
        {
            for (int col = 0; col < columnas; col++)
            {
                if (casillas[fila][col] == simboloBarco)
                {
                    return false; // Todaavia hay partes del barco en el tablero
                }
            }
        }
        return true; // barco hundido
    }

    public int contarGolpes() {
        int conteo = 0;
        for (int fila = 0; fila < filas; fila++)
        {
            for (int col = 0; col < columnas; col++)
            {
                if (casillas[fila][col] == 'X')
                {
                    conteo++;
                }
            }
        }
        return conteo;
    }
    public int contarAguas() {
        int conteo = 0;
        for (int fila = 0; fila < filas; fila++)
        {
            for (int col = 0; col < columnas; col++)
            {
                if (casillas[fila][col] == 'O')
                {
                    conteo++;
                }
            }
        }
        return conteo;
    }
}